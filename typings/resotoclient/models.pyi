"""
This type stub file was generated by pyright.
"""

from dataclasses import dataclass
from typing import Dict, List, Mapping, Optional, Sequence, Union
from datetime import timedelta
from enum import Enum

JsValue = Union[Mapping[str, "JsValue"], Sequence["JsValue"], int, float, bool, str, None,]
JsObject = Mapping[str, JsValue]
@dataclass
class Property:
    name: str
    kind: str
    required: bool = ...
    description: Optional[str] = ...


@dataclass
class Kind:
    fqn: str
    runtime_kind: Optional[str]
    properties: Optional[List[Property]]
    bases: Optional[List[str]]
    ...


@dataclass
class Model:
    kinds: Mapping[str, Kind]
    ...


@dataclass
class GraphUpdate:
    nodes_created: int
    nodes_updated: int
    nodes_deleted: int
    edges_created: int
    edges_updated: int
    edges_deleted: int
    ...


class EstimatedQueryCostRating(Enum):
    simple = ...
    complex = ...
    bad = ...


@dataclass
class EstimatedSearchCost:
    estimated_cost: int
    estimated_nr_items: int
    available_nr_items: int
    full_collection_scan: bool
    rating: EstimatedQueryCostRating
    ...


@dataclass
class Subscription:
    message_type: str
    wait_for_completion: bool = ...
    timeout: timedelta = ...


@dataclass
class Subscriber:
    id: str
    subscriptions: Dict[str, Subscription] = ...


@dataclass
class ParsedCommand:
    cmd: str
    args: Optional[str] = ...


@dataclass
class ParsedCommands:
    commands: List[ParsedCommand]
    env: JsObject = ...


@dataclass
class ConfigValidation:
    id: str
    external_validation: bool = ...


